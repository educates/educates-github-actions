name: Workshop Publisher
description: Publish Educates workshops to GitHub Container Registry.

inputs:
  token:
    description: "GitHub access token."
    required: true
  path:
    description: "Relative directory path under $GITHUB_WORKSPACE to workshop files."
    required: false
    default: '.'
  workshop-resource-file:
    description: "Relative path under workshop directory to the Workshop resource file."
    required: false
    default: 'resources/workshop.yaml'
  training-portal-resource-file:
    description: "Relative path under workshop directory to the TrainingPortal resource file."
    required: false
    default: "resources/training-portal.yaml"
  workshop-image-docker-file:
    description: "Path under workshop directory to the Dockerfile for the custom workshop image."
    required: false
    default: 'Dockerfile'
  image-regular-expression:
    description: "Regular expression to match any image references in Workshop resource file."
    required: false
    default: '$\(image_repository\)/(.+):latest'
  image-replacement-string:
    description: "Replacement string for any matched image references in the Workshop resource file."
    required: false
    default: '{registry}/$1:{tag}'

runs:
  using: composite

  steps:
    - name: Install Carvel tools
      shell: bash
      run: curl -L https://carvel.dev/install.sh | bash

    - name: Calculate variables
      shell: bash
      run: |
        REPOSITORY_NAME=${{github.event.repository.name}}
        echo "REPOSITORY_NAME=${REPOSITORY_NAME,,}" >>${GITHUB_ENV}
        echo "REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
        echo "REPOSITORY_TAG=${GITHUB_REF#refs/tags/}" >>${GITHUB_ENV}
        echo "GITHUB_TOKEN=${{ inputs.token }}" >>${GITHUB_ENV}

    - name: Process workshop.yaml
      shell: bash
      id: process_workshop
      run: |
        ytt -f ${{ inputs.path }}/${{ inputs.workshop-resource-file }} \
          --file-mark "`basename ${{ inputs.workshop-resource-file }}`:type=data" \
          -f ${{ github.action_path }}/fixup-workshop.yaml \
          --data-value name=${REPOSITORY_NAME} \
          --data-value owner=${REPOSITORY_OWNER} \
          --data-value version=${REPOSITORY_TAG} \
          --data-value registry=ghcr.io/${REPOSITORY_OWNER} \
          --data-value workshop_resource_file='${{ inputs.workshop-resource-file }}' \
          --data-value image_regular_expression='${{ inputs.image-regular-expression }}' \
          --data-value image_replacement_string='${{ inputs.image-replacement-string }}' \
          --data-value tag=${REPOSITORY_TAG} > ${{ runner.temp }}/workshop.yaml
        ytt -f ${{ runner.temp }}/workshop.yaml -o json > ${{ runner.temp }}/workshop.json
        CONTENT_IMAGE=$(jq -r '.spec.workshop.image' ${{ runner.temp }}/workshop.json)
        CONTENT_FILES=$(jq -r '[.spec.workshop.files[].image.url][0]' ${{ runner.temp }}/workshop.json)
        if [ "$CONTENT_IMAGE" == "ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-image:${REPOSITORY_TAG}" ]; then
          echo "::set-output name=build_image::true"
        fi
        if [ "$CONTENT_FILES" == "imgpkg+https://ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-files:${REPOSITORY_TAG}" ]; then
          echo "::set-output name=build_files::true"
        fi

    - name: Build workshop files
      shell: bash
      if: steps.process_workshop.outputs.build_files == 'true'
      run: |
        imgpkg --debug push --file ${{ inputs.path }} \
          --image ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-files:${REPOSITORY_TAG} \
          --registry-username=${{github.actor}} \
          --registry-password=${{env.GITHUB_TOKEN}}

    - name: Login to GitHub container registry
      if: steps.process_workshop.outputs.build_image == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: Build workshop image
      if: steps.process_workshop.outputs.build_image == 'true'
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.path }}
        file: ${{ inputs.workshop-image-docker-file }}
        tags: ghcr.io/${{env.REPOSITORY_OWNER}}/${{env.REPOSITORY_NAME}}-image:${{env.REPOSITORY_TAG}}
        push: true

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.REPOSITORY_TAG}}
        release_name: "${{env.REPOSITORY_NAME}}:${{env.REPOSITORY_TAG}}"
        draft: false
        prerelease: false

    - name: Upload workshop.yaml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ runner.temp }}/workshop.yaml
        asset_name: workshop.yaml
        asset_content_type: text/yaml

    - name: Upload training-portal.yaml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.path }}/resources/training-portal.yaml
        asset_name: training-portal.yaml
        asset_content_type: text/yaml

name: Workshop Publisher
description: Publish Educates workshops to GitHub Container Registry.

inputs:
  token:
    description: "GitHub access token."
    required: true
  path:
    description: "Relative directory path under $GITHUB_WORKSPACE to workshop files."
    required: false
    default: "."
  workshop-resource-file:
    description: "Relative path under workshop directory to the Workshop resource file."
    required: false
    default: "resources/workshop.yaml"
  training-portal-resource-file:
    description: "Relative path under workshop directory to the TrainingPortal resource file."
    required: false
    default: "resources/training-portal.yaml"
  workshop-image-docker-file:
    description: "Path under workshop directory to the Dockerfile for the custom workshop image."
    required: false
    default: "Dockerfile"
  image-reference-source:
    description: "Source image reference in the Workshop resource file to replace with target reference."
    required: false
    default: "registry.eduk8s.svc.cluster.local:5001/{name}-image:latest"
  image-reference-target:
    description: "Target reference to replace source image reference in the Workshop resource file."
    required: false
    default: "{registry}/{name}-image:{tag}"
  files-reference-source:
    description: "Source files reference in the Workshop resource file to replace with target reference."
    required: false
    default: "imgpkg+http://registry.eduk8s.svc.cluster.local:5001/{name}-files:latest"
  files-reference-target:
    description: "Target reference to replace source files reference in the Workshop resource file."
    required: false
    default: "imgpkg+https://{registry}/{name}-files:{tag}"

runs:
  using: composite

  steps:
    - name: Install Carvel tools
      shell: bash
      run: curl -L https://carvel.dev/install.sh | bash

    - name: Calculate variables
      shell: bash
      run: |
        REPOSITORY_NAME=${{github.event.repository.name}}
        echo "REPOSITORY_NAME=${REPOSITORY_NAME,,}" >>${GITHUB_ENV}
        echo "REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
        echo "REPOSITORY_SHA7=${GITHUB_SHA::7}" >>${GITHUB_ENV}
        echo "REPOSITORY_TAG=${GITHUB_REF#refs/tags/}" >>${GITHUB_ENV}
        echo "GITHUB_TOKEN=${{ inputs.token }}" >>${GITHUB_ENV}

    - name: Process workshop.yaml
      shell: bash
      id: process_workshop
      run: |
        ytt -f ${{ inputs.path }}/${{ inputs.workshop-resource-file }} \
          -f ${{ github.action_path }}/fixup-workshop.yaml \
          --data-value name=${REPOSITORY_NAME} \
          --data-value owner=${REPOSITORY_OWNER} \
          --data-value version=${REPOSITORY_TAG} \
          --data-value registry=ghcr.io/${REPOSITORY_OWNER} \
          --data-value image_source=${{ inputs.image-reference-source }} \
          --data-value files_source=${{ inputs.files-reference-source }} \
          --data-value image_target=${{ inputs.image-reference-target }} \
          --data-value files_target=${{ inputs.files-reference-target }} \
          --data-value tag=sha-${REPOSITORY_SHA7} > ${{ runner.temp }}/workshop.yaml
        ytt -f ${{ runner.temp }}/workshop.yaml -o json > ${{ runner.temp }}/workshop.json
        CONTENT_IMAGE=$(jq -r '.spec.content.image' ${{ runner.temp }}/workshop.json)
        CONTENT_FILES=$(jq -r '.spec.content.files' ${{ runner.temp }}/workshop.json)
        if [ "$CONTENT_IMAGE" == "ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-image:sha-${REPOSITORY_SHA7}" ]; then
          echo "::set-output name=build_image::true"
        fi
        if [ "$CONTENT_FILES" == "imgpkg+https://ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-files:sha-${REPOSITORY_SHA7}" ]; then
          echo "::set-output name=build_files::true"
        fi

    - name: Build workshop files
      shell: bash
      if: steps.process_workshop.outputs.build_files == 'true'
      run: |
        imgpkg --debug push --file ${{ inputs.path }} \
          --image ghcr.io/${REPOSITORY_OWNER}/${REPOSITORY_NAME}-files:sha-${REPOSITORY_SHA7} \
          --registry-username=${{github.actor}} \
          --registry-password=${{env.GITHUB_TOKEN}}

    - name: Login to GitHub container registry
      if: steps.process_workshop.outputs.build_image == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: Build workshop image
      if: steps.process_workshop.outputs.build_image == 'true'
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.path }}
        file: ${{ inputs.workshop-image-docker-file }}
        tags: ghcr.io/${{env.REPOSITORY_OWNER}}/${{env.REPOSITORY_NAME}}-image:sha-${{env.REPOSITORY_SHA7}}
        push: true

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.REPOSITORY_TAG}}
        release_name: ${{env.REPOSITORY_NAME}}-${{env.REPOSITORY_TAG}}
        draft: false
        prerelease: false

    - name: Upload workshop.yaml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ runner.temp }}/workshop.yaml
        asset_name: workshop.yaml
        asset_content_type: text/yaml

    - name: Upload training-portal.yaml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.path }}/resources/training-portal.yaml
        asset_name: training-portal.yaml
        asset_content_type: text/yaml
